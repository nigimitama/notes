Traceback (most recent call last):
  File "/__w/notes/notes/.venv/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/__w/notes/notes/.venv/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/__w/notes/notes/.venv/lib/python3.10/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/__w/notes/notes/.venv/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/local/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/__w/notes/notes/.venv/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/__w/notes/notes/.venv/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/__w/notes/notes/.venv/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from sklearn.datasets import fetch_openml
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split
from tabpfn import TabPFNRegressor

# Load Boston Housing data
df = fetch_openml(data_id=531, as_frame=True)  # Boston Housing dataset
X = df.data
y = df.target.astype(float)  # Ensure target is float for regression

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=42)

# Initialize the regressor
regressor = TabPFNRegressor()
regressor.fit(X_train, y_train)

# Predict on the test set
predictions = regressor.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, predictions)
r2 = r2_score(y_test, predictions)

print("Mean Squared Error (MSE):", mse)
print("RÂ² Score:", r2)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mOpenMLError[0m                               Traceback (most recent call last)
Cell [0;32mIn[1], line 7[0m
[1;32m      4[0m [38;5;28;01mfrom[39;00m[38;5;250m [39m[38;5;21;01mtabpfn[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m TabPFNRegressor
[1;32m      6[0m [38;5;66;03m# Load Boston Housing data[39;00m
[0;32m----> 7[0m df [38;5;241m=[39m [43mfetch_openml[49m[43m([49m[43mdata_id[49m[38;5;241;43m=[39;49m[38;5;241;43m531[39;49m[43m,[49m[43m [49m[43mas_frame[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m  [38;5;66;03m# Boston Housing dataset[39;00m
[1;32m      8[0m X [38;5;241m=[39m df[38;5;241m.[39mdata
[1;32m      9[0m y [38;5;241m=[39m df[38;5;241m.[39mtarget[38;5;241m.[39mastype([38;5;28mfloat[39m)  [38;5;66;03m# Ensure target is float for regression[39;00m

File [0;32m/__w/notes/notes/.venv/lib/python3.10/site-packages/sklearn/utils/_param_validation.py:216[0m, in [0;36mvalidate_params.<locals>.decorator.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    210[0m [38;5;28;01mtry[39;00m:
[1;32m    211[0m     [38;5;28;01mwith[39;00m config_context(
[1;32m    212[0m         skip_parameter_validation[38;5;241m=[39m(
[1;32m    213[0m             prefer_skip_nested_validation [38;5;129;01mor[39;00m global_skip_validation
[1;32m    214[0m         )
[1;32m    215[0m     ):
[0;32m--> 216[0m         [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    217[0m [38;5;28;01mexcept[39;00m InvalidParameterError [38;5;28;01mas[39;00m e:
[1;32m    218[0m     [38;5;66;03m# When the function is just a wrapper around an estimator, we allow[39;00m
[1;32m    219[0m     [38;5;66;03m# the function to delegate validation to the estimator, but we replace[39;00m
[1;32m    220[0m     [38;5;66;03m# the name of the estimator by the name of the function in the error[39;00m
[1;32m    221[0m     [38;5;66;03m# message to avoid confusion.[39;00m
[1;32m    222[0m     msg [38;5;241m=[39m re[38;5;241m.[39msub(
[1;32m    223[0m         [38;5;124mr[39m[38;5;124m"[39m[38;5;124mparameter of [39m[38;5;124m\[39m[38;5;124mw+ must be[39m[38;5;124m"[39m,
[1;32m    224[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mparameter of [39m[38;5;132;01m{[39;00mfunc[38;5;241m.[39m[38;5;18m__qualname__[39m[38;5;132;01m}[39;00m[38;5;124m must be[39m[38;5;124m"[39m,
[1;32m    225[0m         [38;5;28mstr[39m(e),
[1;32m    226[0m     )

File [0;32m/__w/notes/notes/.venv/lib/python3.10/site-packages/sklearn/datasets/_openml.py:1028[0m, in [0;36mfetch_openml[0;34m(name, version, data_id, data_home, target_column, cache, return_X_y, as_frame, n_retries, delay, parser, read_csv_kwargs)[0m
[1;32m   1023[0m [38;5;28;01melse[39;00m:
[1;32m   1024[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m   1025[0m         [38;5;124m"[39m[38;5;124mNeither name nor data_id are provided. Please provide name or data_id.[39m[38;5;124m"[39m
[1;32m   1026[0m     )
[0;32m-> 1028[0m data_description [38;5;241m=[39m [43m_get_data_description_by_id[49m[43m([49m[43mdata_id[49m[43m,[49m[43m [49m[43mdata_home[49m[43m)[49m
[1;32m   1029[0m [38;5;28;01mif[39;00m data_description[[38;5;124m"[39m[38;5;124mstatus[39m[38;5;124m"[39m] [38;5;241m!=[39m [38;5;124m"[39m[38;5;124mactive[39m[38;5;124m"[39m:
[1;32m   1030[0m     warn(
[1;32m   1031[0m         [38;5;124m"[39m[38;5;124mVersion [39m[38;5;132;01m{}[39;00m[38;5;124m of dataset [39m[38;5;132;01m{}[39;00m[38;5;124m is inactive, meaning that issues have [39m[38;5;124m"[39m
[1;32m   1032[0m         [38;5;124m"[39m[38;5;124mbeen found in the dataset. Try using a newer version from [39m[38;5;124m"[39m
[0;32m   (...)[0m
[1;32m   1037[0m         )
[1;32m   1038[0m     )

File [0;32m/__w/notes/notes/.venv/lib/python3.10/site-packages/sklearn/datasets/_openml.py:363[0m, in [0;36m_get_data_description_by_id[0;34m(data_id, data_home, n_retries, delay)[0m
[1;32m    361[0m url [38;5;241m=[39m _DATA_INFO[38;5;241m.[39mformat(data_id)
[1;32m    362[0m error_message [38;5;241m=[39m [38;5;124m"[39m[38;5;124mDataset with data_id [39m[38;5;132;01m{}[39;00m[38;5;124m not found.[39m[38;5;124m"[39m[38;5;241m.[39mformat(data_id)
[0;32m--> 363[0m json_data [38;5;241m=[39m [43m_get_json_content_from_openml_api[49m[43m([49m
[1;32m    364[0m [43m    [49m[43murl[49m[43m,[49m
[1;32m    365[0m [43m    [49m[43merror_message[49m[43m,[49m
[1;32m    366[0m [43m    [49m[43mdata_home[49m[38;5;241;43m=[39;49m[43mdata_home[49m[43m,[49m
[1;32m    367[0m [43m    [49m[43mn_retries[49m[38;5;241;43m=[39;49m[43mn_retries[49m[43m,[49m
[1;32m    368[0m [43m    [49m[43mdelay[49m[38;5;241;43m=[39;49m[43mdelay[49m[43m,[49m
[1;32m    369[0m [43m[49m[43m)[49m
[1;32m    370[0m [38;5;28;01mreturn[39;00m json_data[[38;5;124m"[39m[38;5;124mdata_set_description[39m[38;5;124m"[39m]

File [0;32m/__w/notes/notes/.venv/lib/python3.10/site-packages/sklearn/datasets/_openml.py:254[0m, in [0;36m_get_json_content_from_openml_api[0;34m(url, error_message, data_home, n_retries, delay)[0m
[1;32m    251[0m         [38;5;28;01mraise[39;00m error
[1;32m    253[0m [38;5;66;03m# 412 error, not in except for nicer traceback[39;00m
[0;32m--> 254[0m [38;5;28;01mraise[39;00m OpenMLError(error_message)

[0;31mOpenMLError[0m: Dataset with data_id 531 not found.

